EP1 de MAC0329 - Implementaçao de uma ALU no Logisim

Nomes:				nUSP:

	-Felipe Silva Felix;		-8941092;
	-Larissa de Oliveira Penteado;	-8941338;
	-Lucas de Carvalho Dias;	-8941241;
	-Thais Lima Sousa. 		-8941220.

-Módulos:

	-HalfAdder:

		Calcula a soma de dois bits sem considerar algum carry anterior. E devolve o resultado
	da soma e o carry.

	-FullAdder:

		Calcula a soma de dois bits considerando o carry anterior. E devolve o resultado da 
	soma e o carry.
	
	-8bitAdder:

		Calcula a soma de dois numeros inteiros de 8 bits no formato de complemento de dois,
	usando 7 FullAdders e 1 HalfAdder em série.
	Se a soma exceder 8 bits, ele indica que ocorreu overflow. Devolve o resultado da soma.

	-8Adder:
	
		Aglutina as entradas e a saida do modulo 8bitAdder em um só pino de 8bits, cada.

	-complemento2:
	
		Recebe um inteiro de 8bits e devolve seu complemento de dois.

	-8Subtracter:
	
		Calcula a substração de dois números inteiros de 8bits no formato de complemento de
	 dois, usando o módulo complemento2 para calcular o complemento do subtraendo, e depois os
	 soma com um 8Adder. Indica overflow, se ocorreu. E devolve o resultado da subtração.

	 -8bitMultiplier:

		Calcula a multiplicação entre dois números inteiros de 8bits no formato de
	complemento de dois. 

	-8Multiplier:
	
		Aglutina as entradas e a saída do módulo 8bitMultiplier em um só pino de 8bits cada. 

	-Greather:

		Recebe dois números inteiros de 8bits positivos e subtrai o segundo do primeiro, e retorna o bit mais significante.
                Ou seja, verifica se o primeiro numero é maior que o segundo.

	-R-Adder:

		Recebe 8 entradas de 1 bit cada, e retorna o numero de 1's.

	-R-Shifter:

		Recebe um número inteiro de 8 bits positivo e o desloca pra esquerda até que o bit mais significante seja 1.

	-DividerUnity:

		Recebe três números inteiros positivos de 8 bits e um número positivo de um bit, o divisor original, o dividendo atual,
                o divisor deslocado e o verificador de parada. O divisor deslocado é subtraido do dividendo atual,
                se o resultado for positivo retorna-se 1, ou 0 caso contrário.
                Tambem sera retornado na saída o novo dividendo, que será igual ao dividendo atual se o resultado foi zero,
                senão, ele será o resultado da subtração. Ao mesmo tempo, é verificado se o divisor original é maior
                do que o divisor deslocado, se sim o próximo indicador de parada sera 1, senão, será 0.
                Caso o atual verificador de parada estiver entrando com 1, automaticamente o proximo verificador de parada será 1,
                e o resultado sera 0 independentemente da subtração.

	-Divider:

		Recebe dois números inteiros de 8 bits no formato de complemento de 2, o dividendo e o divisor.
                Primeiramente, verifica-se se os números são negativos, em caso afirmativo o numero é trocado por seu complemento de dois.
                Então o divisor é deslocado até que seu bit mais significativo seja 1. Feito isso, o divisor e o dividendo são encaminhados
                para a primeira unidade de DividerUnity. As saidas, exceto a saida do resutaldo, dessa primeira DividerUnity são conectadas
                com as respectivas entradas da próxima DividerUnity é repetido até a oitava DividerUnity.
                Os resultados são encaminhados para um shifter, que irá deslocar a combinação dos resultados um número de vezes determinado pelo R-Adder.
                O qual recebe como entrada o dividendo de cada DividerUnity. Ou seja, ele retorna o número da DividerUnity em que operação acabou.
                Depois de deslocado, o resultado recebe de volta seu sinal, mas só é ecaminhado para a saida se não ocorreu overflow.
	        Na mesma DividerUnity apontada pelo R-Adder, é selecionado o dividendo que ela retorna. Esse dividendo é o resto da divisão.
	        Se ocorrer overflow, é retornado 1 no verificador de overflow. O overflow acontece quando se tenta dividir -128 por -1.
                Ou quando se tenta dividor por zero.

	OBS: As vezes, o Logisim buga para algum circuitos auxiliares. Porem quando nao buga, tudo funciona (de acordo com nossos testes).
